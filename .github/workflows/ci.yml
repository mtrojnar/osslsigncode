name: CI

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macOS-latest
            triplet: x64-osx
          - os: windows-latest
            triplet: x64-windows
          - os: windows-latest
            triplet: x86-windows

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies on Linux
      if: ${{matrix.os == 'ubuntu-latest'}}
      run: sudo apt-get install -y libssl-dev libcurl4-openssl-dev faketime

    - name: Install dependencies on non-Linux platforms
      if: ${{matrix.os != 'ubuntu-latest'}}
      run: vcpkg install

    - name: Configure CMake
      run: cmake
        -B ${{github.workspace}}/build
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake
        --build ${{github.workspace}}/build
        --config ${{env.BUILD_TYPE}}

    - name: List files
      if: ${{matrix.os == 'windows-latest'}}
      run: Get-ChildItem -Recurse -Name ..

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    #- name: Install
    #  run: cmake --install ${{github.workspace}}/out/build/ninja-multi-config/${{env.BUILD_TYPE}}

    #- name: List files
    #  if: ${{matrix.os == 'windows-latest'}}
    #  run: Get-ChildItem -Recurse -Name ..

    #- name: Upload the artifacts
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: osslsigncode-${{matrix.triplet}}
    #    path: ${{github.workspace}}

    env:
      VCPKG_DEFAULT_TRIPLET: ${{matrix.triplet}}
