#!/bin/sh
# Verify PE/MSI file signature with RFC3161 timestamping after the cert has been expired.

. $(dirname $0)/../test_library

# PE file
test_name="531. Verify PE file signature with RFC3161 after the cert has been expired"
printf "\n%s\n" "$test_name"
if [ -s "test.exe" ] && ! grep -q "no libcurl available" "results.log"
  then
    TZ=GMT faketime -f '@2019-05-01 00:00:00' /bin/bash -c '
        script_path=$(pwd)
        ../../osslsigncode sign -h sha256 \
            -certs "${script_path}/../certs/cert.pem" -key "${script_path}/../certs/key.pem" \
            -ts http://time.certum.pl/ \
            -in "test.exe" -out "test_531.exe" 2>> "results.log" 1>&2'
    verify_signature "$?" "531" "exe" "success" "@2025-01-01 12:00:00" \
	"UNUSED_PATTERN" "UNUSED_PATTERN" "UNUSED_PATTERN" "UNUSED_PATTERN"
    test_result "$?" "$test_name"
  else
    printf "Test skipped\n"
  fi

# CAB file
# Command is not supported for non-PE/non-MSI files

# MSI file
test_name="533. Verify MSI file signature with RFC3161 after the cert has been expired"
printf "\n%s\n" "$test_name"
if [ -s "sample.msi" ] && ! grep -q "no libcurl available" "results.log"
  then
    TZ=GMT faketime -f '@2019-05-01 00:00:00' /bin/bash -c '
        script_path=$(pwd)
        ../../osslsigncode sign -h sha256 \
            -certs "${script_path}/../certs/cert.pem" -key "${script_path}/../certs/key.pem" \
            -ts http://time.certum.pl/ \
            -in "sample.msi" -out "test_533.msi"'
    verify_signature "$?" "533" "msi" "success" "@2025-01-01 12:00:00" \
	"UNUSED_PATTERN" "UNUSED_PATTERN" "UNUSED_PATTERN" "UNUSED_PATTERN"
    test_result "$?" "$test_name"
  else
    printf "Test skipped\n"
  fi

exit 0
